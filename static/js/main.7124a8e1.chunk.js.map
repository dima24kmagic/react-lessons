{"version":3,"sources":["app/components/SideMenu/SideMenu.js","app/screens/Home/Home.js","app/components/LessonsSection/constants.js","app/PropTypes/PropTypes.js","app/components/Lesson/LessonHeader/LessonHeader.js","app/components/CodeBlock/CodeBlock.js","app/components/HtmlParser/HtmlParser.js","app/components/Lesson/Lesson.js","app/components/LessonsSection/LessonsSection.js","app/screens/Lessons/Lessons.js","app/screens/About/About.js","app/theme.js","app/App.js","serviceWorker.js","index.js"],"names":["SideMenu","_ref","classes","side","links","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","onMenuToggle","react_default","a","createElement","Grid_default","container","item","className","burgerWrapper","onClick","IconButton_default","Menu_default","index_es","onClose","onOpen","open","anchor","menu","MenuItem_default","itemIntro","NavLink","to","navLink","Typography_default","variant","intro","map","link","cn","key","text","defaultProps","enhance","withStyles","display","flexDirection","alignItems","width","@media(max-width: 768px)","textDecoration","color","justifyContent","margin","position","top","right","Home","this","props","core_Grid_default","root","title","Link","startLink","Component","theme","height","marginTop","fontWeight","fontSize","letterSpacing","textAlign","padding","borderBottom","textTransform","fontFamily","transition","&:hover","lessons","id","body","lessonPropType","PropTypes","shape","string","isRequired","arrayOf","LessonHeader","onExpand","expanded","isAvailable","headerClass","header","defineProperty","lessonNotAvailable","justify","titleTypography","expandBtn","expandOpen","ExpandMore_default","cursor","background","&::after","content","left","opacity","transform","transitions","create","duration","shortest","marginLeft","palette","colors","green","CodeBlock","_this$props","value","language","default_highlight","style","solarized","React","PureComponent","propTypes","htmlToReactParser","HtmlToReactParser","Parser","HtmlParser","parse","Lesson","lesson","setExpanded","direction","LessonHeader_LessonHeader","Collapse_default","in","infoContainer","react_markdown_default","source","renderers","code","html","paddingTop","LessonsSection","gutterBottom","sectionTitle","sectionItem","Lesson_Lesson","paddingLeft","borderTop","&:last-child","Lessons","paddingBottom","LessonsSection_LessonsSection","About","createMuiTheme","primary","blue","secondary","main","lightGrey","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","styles","BrowserRouter","react","SideMenu_SideMenu","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7124a8e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { MenuList, SwipeableDrawer, withStyles } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport cn from 'classnames'\nimport Typography from '@material-ui/core/Typography'\nimport { NavLink } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcn from '@material-ui/icons/Menu'\n\nconst propTypes = {\n  /** Which side menu should be draggable from */\n  side: PropTypes.oneOf(['right']),\n  /** Items in menu */\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      /** link path */\n      to: PropTypes.string,\n      /** Text of a link */\n      text: PropTypes.string,\n    }),\n  ),\n  /** @ignore */\n  classes: PropTypes.shape().isRequired,\n}\n\nconst defaultProps = {\n  isOpen: false,\n  side: 'right',\n  links: [],\n}\n\nconst styles = {\n  menu: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: 300,\n    '@media(max-width: 768px)': {\n      width: '70vw',\n    },\n  },\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  navLink: {\n    textDecoration: 'none',\n  },\n  intro: {\n    color: '#121212',\n  },\n  itemIntro: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '16px 0',\n  },\n  burgerWrapper: {\n    position: 'fixed',\n    top: 8,\n    right: 8,\n  },\n}\n\n/**\n * Side menu component with navigation in it\n */\nfunction SideMenu({ classes, side, links }) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const onMenuToggle = () => {\n    setIsOpen(!isOpen)\n  }\n  return (\n    <Grid container>\n      <Grid item className={classes.burgerWrapper} onClick={onMenuToggle}>\n        <IconButton>\n          <MenuIcn />\n        </IconButton>\n      </Grid>\n      <SwipeableDrawer\n        onClose={onMenuToggle}\n        onOpen={onMenuToggle}\n        open={isOpen}\n        anchor={side}\n      >\n        <MenuList className={classes.menu}>\n          <MenuItem className={classes.itemIntro}>\n            <NavLink to=\"/\" className={classes.navLink}>\n              <Typography\n                variant=\"display1\"\n                className={classes.intro}\n                onClick={onMenuToggle}\n              >\n                React Guide\n              </Typography>\n            </NavLink>\n          </MenuItem>\n          {links.map(link => (\n            <NavLink\n              className={cn(classes.navLink, classes.item)}\n              to={link.to}\n              onClick={onMenuToggle}\n              key={link.to}\n            >\n              <MenuItem className={classes.item}>{link.text}</MenuItem>\n            </NavLink>\n          ))}\n        </MenuList>\n      </SwipeableDrawer>\n    </Grid>\n  )\n}\n\nSideMenu.propTypes = propTypes\nSideMenu.defaultProps = defaultProps\n\nconst enhance = withStyles(styles)\n\nexport default enhance(SideMenu)\n","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { shape } from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst styles = theme => ({\n  root: {\n    height: '60vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  title: {\n    marginTop: 48,\n    fontWeight: 800,\n    fontSize: 42,\n    color: '#121212',\n  },\n  startLink: {\n    textDecoration: 'none',\n    letterSpacing: 8,\n    textAlign: 'center',\n    padding: '0 4px',\n    borderBottom: '2px solid #3e3e3e',\n    textTransform: 'uppercase',\n    fontSize: 24,\n    fontFamily: theme.fontFamily,\n    color: '#3e3e3e',\n    fontWeight: 800,\n    transition: 'color .15s, padding .15s, border .15s',\n    '&:hover': {\n      color: '#121212',\n      borderBottom: '2px solid #121212',\n      padding: '0 24px',\n    },\n  },\n})\nclass Home extends Component {\n  static propTypes = {\n    /** @ignore */\n    classes: shape({}).isRequired,\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Grid container className={classes.root}>\n        <Grid item>\n          <Typography className={classes.title} variant=\"display1\">\n            Узнайте Основы Реакта в быстрых уроках\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Link to=\"/lessons\" className={classes.startLink}>\n            Начать\n          </Link>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst enhance = withStyles(styles)\n\nexport default enhance(Home)\n","export const lessons = [\n  {\n    id: 'intro',\n    title: 'NodeJS и NPM',\n    body: `\n# NodeJS и NPM\n\nДля того, чтобы создать ваше первое React приложение для начала вам понадобиться:  \n- [NodeJS](https://nodejs.org/en/)\n- npm - должен установиться вместе с NodeJS  \n\nПосле того, после установки NodeJS проверьте, что всё поставилось правильно, для этого введите в терминале\n\n\\`\\`\\`sh\n$ node -v\n$ npm -v\n\\`\\`\\`\nЭти две комманды должны вывести версию установленных пакетов.  \n    `,\n  },\n  {\n    id: 'create-react-app',\n    title: 'create-react-app',\n    body: `\n# create-react-app\n\nПосле установки NodeJS и NPM, нужно установить create-react-app (сетаппер react приложений от facebook).\nДля того, чтобы это сделать, введите в терминале\n\n\\`\\`\\`sh\n$ npm install -g create-react-app         (Это установит crate-react-app на вашу систему *если вы на системе Linux/MacOS, перед коммандой введите sudo)\n$ create-react-app -v                     (Проверка что пакет установился нормально)\n\\`\\`\\`\n    `,\n  },\n  {\n    /** Lesson id */\n    id: 'react-setup',\n    /** Lesson title */\n    title: 'Привет React',\n    /** is Pure Text */\n    body: `\n# Добро пожаловать на уроки реакта!  \n\nЯ думаю, что вы уже знаете, что такое ReactJS, А если нет, то рекоммендую к прочтению [статьи о ReactJS](https://teletype.in/@rupper/BJEtj2djX)\n\nДавайте приступим к созданию первого приложения, для этого:  \n\n- Перейдите в терминале в нужную вам директорию и запустите  \n\n\\`\\`\\`sh\n$ create-react-app testing\n\\`\\`\\`\nЭта комманда создаст все необходимые файлы и настроит нужные тулы, чтобы реакт-приложение могло ожить:)\n\n- После того, как приложение создасться, перейдите в терминале в созданную директорию и введите\n\\`\\`\\`sh\n$ npm start\n\\`\\`\\`\n\nПосле этой комманды должно открыться окно браузера с адресом [http://localhost:3000](http://localhost:3000)\n\nЕсли окно браузера не открылось - попробуйте открыть его самостоятельно (кликните на ссылку, которую я выделил)\n\nПосле всех действий у вас должно быть стартовое окно с сообщением от React-разработчиков, поздравляю, вы только что создали своё первое React-приложение:)\n`,\n  },\n  {\n    /** Lesson id */\n    id: 'first-react-change',\n    /** Lesson title */\n    title: 'Первый компонент',\n    /** is Pure Text */\n    body: `\n# Теперь давайте напишем ваш первый реакт компонент!  \n\nДля того, чтобы это сделать, перейдите в созданную директорию проекта  \nи перейдите к файлу **\\`/src/App.js\\`**\n\nСотрите всё, что там будет сгенерировано и вставьте этот код  \n\n\\`\\`\\`js\nimport React, { Component } from 'react';\n\nclass App extends Component { /* Создаём класс наследуемый от класса Component, доступный из библиотеки React*/\n  render() { /* Перезаписываем метод render и возвращаем, что нам нужно */\n     return <div>Мой первый реакт компонент!</div>  \n  }\n}  \n\nexport default App\n\\`\\`\\`\n\n P.S. Только что вы создали ваш первый реакт компонент. Думаю, что если вы были внимательны,\n то уже заметили, как выглядит структура простейшего реакт компонента;)\n  `,\n  },\n  {\n    /** Lesson id */\n    id: 'component-structure',\n    /** Lesson title */\n    title: 'Разбор структуры компонента',\n    /** is Pure Text */\n    body: `\n# Структура  \n\nНаверняка при прошлом уроке у вас возникло ощущение, что в функции render, \nвозвращаемое значение очень уж похоже на обычный html.\nУ меня для вас новости, вы не ошиблись!) Однако возвращается не html, \nа [**jsx** (JavaScript XML)](https://stackoverflow.com/questions/39461805/what-does-jsx-stand-for), \nкоторый потом [webpack](https://survivejs.com/webpack/what-is-webpack/)(бандлер, который настраивается автоматически\nс помощью create-react-app и про который вам не обязательно знать в начале) \nтранслирует в javascript код, и дальше этот js код реакт размещает на вашей веб-странице  \n  \nТак же, как вы наверняка заметили, реакт компонент - это js класс, который наследуется от React класса **Component**\nИ метод render - это наследуемый метод этот класса, который мы можем перезаписать, и вовращать всё, что нам надо:)\n\n\\`\\`\\`js\nvar React, {Component} = require('react');\nclass App extends React.Component {\n  render() { /*<---- А это наш render метод, наследуемый от Component класса, предоставленного реактом*/\n    return <div>Это JSX который webpack превращает в обычный JS код</div>  \n  }\n}  \n\\`\\`\\`\nПо сути, это всё, что вам нужно знать для начала работы с реактом, для создания компонента нужно создать класс, дать ему имя,\nнаследовать его от класса Component и перезаписать метод render()\n`,\n  },\n  {\n    /** Lesson id */\n    id: 'component-state',\n    /** Lesson title */\n    title: 'State React-Компонента',\n    /** is Pure Text */\n    body: `\n# Что такое state?\n  \n>  State - любая необходимая информация, котоую может хранить и изменять ваш компонент, например: (текущее время, прдменты которые пользователь выбрал в онлайн магазине) \n\nДавайте посмотрим, как использовать state в нашем реакт приложении  \n(Я рассчитываю, что ваше реакт приложение запущено, а если нет, то перейдите с помощью терминала в директорию с этим приложением и запустите в консоли след. команду)\n\n\\`npm start\\` - это запустит ваш dev server и откроет окно в браузере с вашим приложением\n\nПосле этого, чтобы узнать, какой компонент редериться на вашей странице, перейдите к файлу:  \\`src/index.js\\`\nи посмотрите, где размещается файл в теле метода \\`ReactDOM.render\\`\n\n\\`\\`\\`js  \nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App' /* Перейдите к этомму файлу, чтобы редактировать компонент, который рендериться на вашем экране */\n\nReactDOM.render(<App />, document.getElementById('root'))\n\\`\\`\\`\n\nПосле того, как вы открыли файд App.js с компонентом App (компонент, который генерируются автоматически с помощью **create-react-app**)\n\nДавайте создадим рядом с ним свой компонент, который будет показывать ваш возраст:), для этого:  \n\n1. Создайте файл \\`UserAge.js \\`\n2. В создавшемся файле создайте класс \\`UserAge\\`, который наследуется от класса \\`Component\\` (то, что мы делали в уроках выше), и перезапишите метод \\`render\\`, чтобы он возвращал:\n\n\\`\\`\\`js\n<div>Мой возраст: (здесь будет мой возраст)</div>\n\\`\\`\\`\n\n3. После этого экспортируйте ваш класс, для этого напишите \\`export default UserAge\\` в конце файла \\`UserAge\\`\n\n\n\\`\\`\\`js\nimport React from 'react'\n\nclass UserAge extends React.Component {...}\n\nexport default UserAge /*Экспорт и импорт файлов доступен благодоря настроенного с помощью create-react-app webpack-бандлера */\n\\`\\`\\`\n  \n4. Перейдите обратно к компоненту \\`App\\`, импортируйте компонент \\`UserAge\\` и используйте его точно так-же, если бы использовали обычный html компонент\n\n\n\\`\\`\\`js\nimport React from 'react'\nimport UserAge from './UserAge'\n\nclass App extends React.Component {\n    render() { /*Использование экспортированных React-Компонентов*/\n        return <UserAge />\n    }\n}\n\\`\\`\\`\n\n### Если всё прошло хорошо, то на вашем экране должно появиться сообщения из \\`render\\` метода компонента \\`UserAge\\`\n\nТеперь давайте перейдём к **одной из самый фундаментальных частей реакта**, использованию \\`состояния*\\` компонента\n> *чтобы вас не пугало состояние компонента, можете про себя говорить, состояние - это хранение информации внутри компонента:)\n\nСнова откройте файл \\`UserAge \\`\n\nСостояние компонента как правило храниться в js объекте, и для того, чтобы создать его, перед методом \\`render\\` в классе \\`UserAge\\` напишите\n\n\\`\\`\\`js\nstate = {\n    myAge: 19\n}\n\\`\\`\\` \n\nДолжно получиться примерно так:\n\n\\`\\`\\`js\nimport React from 'react'\n\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    render() {\n        return <div>Мой возраст: (здесь будет мой возраст)</div>\n    }\n}\n    \nexport default UserAge\n\\`\\`\\`\n\nЧто же нужно сделать, чтобы использовать то самое поле \\`myAge\\` из объекта \\`state\\` в теле метода \\`render\\`?  \n\nДля этого в \\`JSX\\` нужно использовать curly braces это они -> \\`{}\\`, давайте я покажу наглядно, чтобы вы могли это увидеть и попробовать\n\n\\`\\`\\`js\nimport React from 'react'\n\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    render() { /* Здесь используются {} */\n        return <div>Мой возраст: {this.state.myAge}</div>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`  \n\nТеперь ваш компонент должен выводить ваш возраст, поздравляю, вы только что использовали фундаментальную вещь, без которой практически невозможна реакт-разработка:)  \n\nВнутри \\`{}\\` вы можете писать \\`любые* js выражения\\` \n> *любые, но главное условие - оттуда должно возвращаться какое-то значение (\\`jsx/string/number/etc\\`), например:\n\n> *Писать JS Expressions можно только внутри компонентов\n\n\\`\\`\\`js\nimport React from 'react'\n\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    render() {\n        return <div> Мой возраст: {this.state.myAge} { // По сути, внутри {} в JSX вы можете писать обычный JavaScript код\n        this.state.myAge >= 18\n        ? <span> Я совершеннолетний </span> // Это тернарный оператор\n        : <p> Я ещё не совершеннолетний </p>\n        }</div>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`    \n   \n#### **Теперь вы можете использовать State внутри компонентов, круто! Но нам как-то нужно изменить наш возраст**\n  `,\n  },\n  {\n    id: 'set-state',\n    title: 'Давайте изменим State',\n    body: `\n# Давайте изменим \\`State\\`\n\nВ прошлом уроке мы создали компонент \\`UserAge\\`, который показывал наш возраст, а так же говорил, совершеннолитний пользователь, или нет\n\nВ идеальном мире нам ничего не пришлось бы и менять, однако вечно молодыми мы не сможем остаться, поэтому придётся добавить кнопку **\"Постареть\"**, которая будет добавлять нам год возраста:)\n\n> NOTE: \\`render\\` метод может возвращать **только 1 JSX компонент**  \n\nПоскольку наш рендер метод может возвращать только один компонент, а мы не хотим захламлять наш HTML документ лишними дивами, мы обернём возвращаемые значения в \\`Fragment\\` компонент, предоставляемый реактом\n\n> По сути \\`Fragment\\` используется, чтобы не возвращать лишний \\`div\\`, который нужен, чтобы из рендер метода возвращался только 1 компонент\n\n\\`\\`\\`js\nimport React, { Fragment } from 'react' /* Обратите внимание, что мы импортируем Fragment компонент */\n\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    render() {\n        const ADULT_AGE = 21;\n        return <Fragment>\n            <div> Мой возраст: {this.state.myAge} { // По сути, внутри {} в JSX вы можете писать обычный JavaScript код\n             this.state.myAge >= ADULT_AGE\n            ? <span> Я совершеннолетний </span> // Это тернарный оператор\n            : <span> Я ещё не совершеннолетний </span>\n            }</div>\n            {/*Обратите внимание, я пишу комментарий внутри {}, поскольку комментарий - это js*/}\n            {/*Мы создали нашу кнопку:)*/}\n            <button>Постареть!</button>\n        <Fragment>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`\nПока что наша кнопка не может ничего сделать, поэтому давайте я расскажу про \\`setState\\`\n\n#### \\`setState\\` Используется, чтобы изменить значение объекта \\`state\\` компонента,\n\nНе буду томить, покажу, как мы можем это использовать \n\n\\`\\`\\`js\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    // создадим callback, который будет срабатывать по нажатию на кнопку\n    // NOTE: я использую arrow function, поэтому контект этой функции (this), будет принадлежать классу\n    onAddUserAge = (e) => {\n        this.setState({\n            myAge: this.state.myAge + 1\n        })\n    }\n    render() {\n        const ADULT_AGE = 21;\n        return <Fragment>\n            <div> Мой возраст: {this.state.myAge} { // По сути, внутри {} в JSX вы можете писать обычный JavaScript код\n             this.state.myAge >= ADULT_AGE\n            ? <span> Я совершеннолетний </span> // Это тернарный оператор\n            : <span> Я ещё не совершеннолетний </span>\n            }</div>\n            {/*Обратите внимание, я пишу комментарий внутри {}, поскольку комментарий - это js*/}\n            {/*Мы создали нашу кнопку:)*/}\n            <button onClick={this.onAddUserAge}>Постареть!</button>\n        <Fragment>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`\n\nПосле того, как вы напишите функцию для этой кнопки, то вы сможете заметить, что при нажатии она меняет показываемый возраст:)\n\nТеперь давайте разберём, как это работает по частям\n\n\\`\\`\\`js\nonAddUserAge = (e) => {\n    this.setState({\n        myAge: this.state.myAge + 1\n    })\n}\n\\`\\`\\`\n\n\nФункция \\`onAddUserAge\\` принимает \\`event\\` объект (точно так-же, как и callback в \\`onAddEventListener\\` в js),\nпосле этого мы вызываем функцию \\`setState\\`, доступную в контексте нашего класса (\\`this\\`), если вы внимательны, то у вас может возникнуть вопрос, как эта функция имеет контект (\\`this\\`) класса, всё потому, \nчто мы используем \\`arrow function\\` (у неё нет контекста, поэтому она вышестоящий контекст), \nа вышестоящий контект - контекст класса\n\n\\`setState\\` принимает в себя объект с \\`key\\` который будет добавлен/изменён (в нашем случае изменён) и \\`value\\`, которое будет присвоено, и эта функция имеет доступ к контекту класса, поэтому мы можем прочитать текущий \\`state.myAge\\` и установить новый, но больше на 1 год:) \n\n\n> Читай больше о setState на [документации ReactJS](https://reactjs.org/docs/state-and-lifecycle.html) \n\nМы разобрались, что значит функция, теперь давайте перейдём к кнопке\n\n\\`\\`\\`js\n<button onClick={onAddUserAge}>Постареть!</button>\n\\`\\`\\`\n\n\\`event onClick\\` принимает в себя \\`callback\\` функцию, которая будет выполнена\n\n> Таких event'oв очень много, полный список читайте [здесь](https://reactjs.org/docs/events.html)\n\nМы также могли просто вывести что-то в консоль, сделав так:\n\n\\`\\`\\`js\n<button onClick={function(event){\n    console.log(\"hello world, мой возраст:\", this.state.myAge)\n    }\n}>Постареть!</button>\n\\`\\`\\`\n\nно мы отправили ссылку на функцию, которая объявлена в теле класса\n\n#### Отлично, мы разобрались, как изменить state класса:)\n    `,\n  },\n  {\n    /** Lesson id */\n    id: 'component-props',\n    /** Lesson title */\n    title: 'Использование Props (передаваемых свойств) компонента',\n    /** is Pure Text */\n    body: `\n# Свойства (Props)\n\nСвойства используются для того, чтобы передать информацию из одного компонента в другой, это делается очень легко, поэтому сейчас мы рассмотрим, как это сделать.\n\nПерейдите в компонент \\`App\\` где мы используем наш компонент \\`UserAge\\` и сделайте следующее:\n- В теле компонента передайте свойство вашего имени и пару других свойств\n\\`\\`\\`js\n    class App extends React.Component {  \n        render() { /* обратите внимание, что мы используем {} для передачи любых типов данных, но для строк их можно не писать */\n          return <UserAge randomString='{\"моя' строка\"} nameProp='Моё крутое имя' birthdayYear={2000} />\n        }\n    }\n\\`\\`\\`      \n\nТолько что мы передали в компонент UserAge свойства \\`nameProps, birthdayYear, randomString\\`  \n\nЧтобы получить эти свойства в нашем компоненте \\`UserAge\\` давайте перейдём к нему и получим его похожим образом, как получали данные из \\`state\\`\n\\`\\`\\`js\nimport React from 'react'\n\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    render() {\n        const { randomString, nameProp, birthdayYear} = this.props /* Это называется object-deconstruction */\n        return <div>Меня зовут {nameProp}, мой возраст: {this.state.myAge}, я родился в {birthdayYear} году</div>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`\n\n\\`\\`\\`js\nclass UserAge extends React.Component {\n    state = {\n        myAge: 19\n    }\n    onAddUserAge = (e) => {\n        this.setState({\n            myAge: this.state.myAge + 1\n        })\n    }\n    render() {\n        const ADULT_AGE = 21;\n        const { randomString, nameProp, birthdayYear} = this.props /* Это называется object-deconstruction */\n        return <Fragment>\n            <div>Меня зовут {nameProp} мой возраст: {this.state.myAge} {\n             this.state.myAge >= ADULT_AGE\n            ? <span> Я совершеннолетний </span>\n            : <span> Я ещё не совершеннолетний </span>\n            }\n                <span>Я родился в {birthdayYear} году</span>\n            </div>\n            <button onClick={this.onAddUserAge}>Постареть!</button>\n        <Fragment>\n    }\n}\n\nexport default UserAge\n\\`\\`\\`\n\n##### Вот таким нехитрым способом вы можете передавать свойства в ваш реакт-компонент\n\n`,\n  },\n  {\n    id: 'end-words',\n    title: 'На будущее',\n    body: `\n# Слова на будущее\n\nВот вы и подошли к концу изучения основ реакта, то, что описано вверху этих уроков - лишь фундаментальные знания, которых хватит, чтобы писать ооочень простые приложения на реакте:) Однако, это база, которую нужно понимать очень хорошо, так как все бодее продвинутые паттерны лежать именно на этих знаниях\n\nНадеюсь, что тот, кто читал это - не остался без вопросов, потому что если вы остались без вопросов - значит, скорее всего, у вас их так много, что вы ничего не поняли XD, для углубления своих знаний рекоммендую следующие ресурсы:\n\n- [Medium - блог, в том числе есть очень много информации по реакту](https://medium.com)\n- [course-hunters - сайт со многими курсами (в том числе и по реакту)](https://coursehunters.net/)\n- [Оффициальная документация React(очень хорошо написанная)](https://reactjs.org/)\n\n# Cпасибо, что учили эти уроки, если у вас есть, что дополнить - кидайте ваши pull реквесты [в этот репозиторий](https://github.com/dima24kmagic/react-lessons)\n    `,\n  },\n]\n","import PropTypes from 'prop-types'\n\nexport const lessonPropType = PropTypes.shape({\n  /** Lesson id */\n  id: PropTypes.string.isRequired,\n  /** Lesson title */\n  title: PropTypes.string.isRequired,\n  /** Body in md format */\n  body: PropTypes.string.isRequired,\n})\n\nexport const arrayOfLessons = PropTypes.arrayOf(lessonPropType)\n","import React from 'react'\nimport { bool, func, shape, string } from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport cn from 'classnames'\n\nconst propTypes = {\n  /** Is lesson available */\n  isAvailable: bool,\n  /** Is lesson open */\n  expanded: bool,\n  /** Title of a lesson */\n  title: string.isRequired,\n  /** On expand button or title click */\n  onExpand: func,\n  /** @ignore */\n  classes: shape({}).isRequired,\n}\n\nconst defaultProps = {\n  isAvailable: true,\n  onExpand: () => {},\n  expanded: false,\n}\n\nconst styles = theme => ({\n  header: {\n    padding: '4px',\n    cursor: 'pointer',\n    transition: 'background .1s',\n    '&:hover': {\n      background: 'rgba(0,0,0,.1)',\n    },\n  },\n  lessonNotAvailable: {\n    position: 'relative',\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      background: 'rgba(0,0,0,0.2)',\n    },\n    opacity: 0.3,\n  },\n  expandBtn: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    padding: 4,\n    marginLeft: 8,\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  title: {\n    cursor: 'pointer',\n  },\n  titleTypography: {\n    // textDecoration: 'underline',\n    fontWeight: 800,\n    color: theme.palette.colors.green,\n  },\n})\n/**\n * Lesson Header Section\n */\nexport function LessonHeader({\n  classes,\n  onExpand,\n  expanded,\n  isAvailable,\n  title,\n}) {\n  const headerClass = cn(classes.header, {\n    [classes.lessonNotAvailable]: !isAvailable,\n  })\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={headerClass}\n      onClick={onExpand}\n    >\n      <Grid item className={classes.title}>\n        <Typography className={classes.titleTypography} variant=\"title\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <IconButton\n          className={cn(classes.expandBtn, {\n            [classes.expandOpen]: expanded,\n          })}\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  )\n}\n\nLessonHeader.propTypes = propTypes\nLessonHeader.defaultProps = defaultProps\n\nconst enhance = withStyles(styles)\n\nexport default enhance(LessonHeader)\n","import React from 'react'\nimport { string } from 'prop-types'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport solarized from 'react-syntax-highlighter/dist/esm/styles/prism/solarizedlight'\nimport base16 from 'react-syntax-highlighter/dist/esm/styles/prism/base16-ateliersulphurpool.light'\nimport duotoneLight from 'react-syntax-highlighter/dist/esm/styles/prism/duotone-light'\n\nclass CodeBlock extends React.PureComponent {\n  render() {\n    const { value, language } = this.props\n    return (\n      <div className=\"code-block\">\n        <SyntaxHighlighter language={language} style={solarized}>\n          {value}\n        </SyntaxHighlighter>\n      </div>\n    )\n  }\n}\n\nCodeBlock.propTypes = {\n  value: string.isRequired,\n  language: string.isRequired,\n}\n\nexport default CodeBlock\n","import React from 'react'\nimport { string } from 'prop-types'\nimport HtmlToReactParser from 'html-to-react'\n\nconst propTypes = {\n  value: string.isRequired,\n}\n\n/**\n * HTML parser\n */\nconst htmlToReactParser = new HtmlToReactParser.Parser()\nfunction HtmlParser({ value }) {\n  const reactElement = htmlToReactParser.parse(value)\n  return reactElement\n}\n\nHtmlParser.propTypes = propTypes\n\nexport default HtmlParser\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid/Grid'\nimport ReactMarkdown from 'react-markdown'\nimport Collapse from '@material-ui/core/Collapse'\nimport { lessonPropType } from '../../PropTypes/PropTypes'\nimport LessonHeader from './LessonHeader/LessonHeader'\nimport CodeBlock from '../CodeBlock'\nimport HtmlParser from '../HtmlParser/HtmlParser'\n\nconst propTypes = {\n  /** Lesson proptype */\n  lesson: lessonPropType.isRequired,\n  /** @ignore */\n  classes: PropTypes.shape().isRequired,\n}\n\nconst defaultProps = {}\n\nconst styles = theme => ({\n  infoContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: theme.fontFamily,\n    alignItems: 'center',\n    padding: '16px 0px',\n    paddingTop: 28,\n  },\n  root: {\n    width: '100%',\n  },\n  lesson: {\n    width: 800,\n  },\n})\n\n/**\n * Lesson component\n */\nfunction Lesson({ classes, lesson }) {\n  const [expanded, setExpanded] = useState(false)\n  function onExpand() {\n    setExpanded(!expanded)\n  }\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <Grid item>\n        <LessonHeader\n          onExpand={onExpand}\n          title={lesson.title}\n          expanded={expanded}\n        />\n      </Grid>\n      <Collapse in={expanded}>\n        <Grid item>\n          <div className={classes.infoContainer}>\n            <div className={classes.lesson}>\n              <ReactMarkdown\n                source={lesson.body}\n                renderers={{ code: CodeBlock, html: HtmlParser }}\n              />\n            </div>\n          </div>\n        </Grid>\n      </Collapse>\n    </Grid>\n  )\n}\n\nLesson.propTypes = propTypes\nLesson.defaultProps = defaultProps\n\nconst enhance = withStyles(styles)\n\nexport default enhance(Lesson)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport { lessonPropType } from '../../PropTypes/PropTypes'\nimport Lesson from '../Lesson'\n\nconst propTypes = {\n  /** Title of a section */\n  title: PropTypes.string,\n  /** Section lessons */\n  lessons: PropTypes.arrayOf(lessonPropType),\n  /** @ignore */\n  classes: PropTypes.shape().isRequired,\n}\n\nconst defaultProps = {\n  title: '',\n  lessons: [],\n}\n\nconst styles = {\n  root: {\n    width: '80%',\n    margin: '0 auto',\n  },\n  sectionTitle: {\n    fontWeight: 800,\n    paddingTop: 48,\n    paddingLeft: 8,\n    color: '#000714',\n    textAlign: 'center',\n  },\n  sectionItem: {\n    borderTop: '2px solid rgba(0,0,0,.3)',\n    '&:last-child': {\n      borderBottom: '2px solid rgba(0,0,0,.3)',\n    },\n  },\n}\n\n/**\n * Lessons grouped in section\n */\nexport function LessonsSection({ classes, title, lessons }) {\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <Grid item>\n        <Typography\n          gutterBottom\n          variant=\"display2\"\n          className={classes.sectionTitle}\n        >\n          {title}\n        </Typography>\n      </Grid>\n      {lessons.map(lesson => (\n        <Grid item className={classes.sectionItem} key={lesson.id}>\n          <Lesson lesson={lesson} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nLessonsSection.propTypes = propTypes\nLessonsSection.defaultProps = defaultProps\n\nconst enhance = withStyles(styles)\n\nexport default enhance(LessonsSection)\n","import React, { Component } from 'react'\nimport { lessons } from '../../components/LessonsSection/constants'\nimport LessonsSection from '../../components/LessonsSection'\nimport Grid from '@material-ui/core/Grid'\n\nclass Lessons extends Component {\n  render() {\n    return (\n      <Grid container style={{ paddingBottom: '20vh' }}>\n        <Grid item style={{ width: '100%' }}>\n          <LessonsSection title=\"Основы Реакта\" lessons={lessons} />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default Lessons\n","import React, {Component} from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        About\n      </div>\n    );\n  }\n}\n\nexport default About;","import { createMuiTheme } from '@material-ui/core'\nimport { blue } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: '#7c4dff',\n    },\n    colors: {\n      green: '#6BFF83',\n      lightGrey: 'rgba(0,0,0,.3)',\n    },\n  },\n  fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n})\n\nexport default theme\n","import React, { Component, Fragment } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport SideMenu from './components/SideMenu'\nimport Home from './screens/Home/Home'\nimport Lessons from './screens/Lessons/Lessons'\nimport About from './screens/About/About'\nimport theme from './theme'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.links = [{ to: '/lessons', text: 'Уроки' }]\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Fragment>\n            <SideMenu side=\"right\" links={this.links} />\n            <Switch>\n              <Route path=\"/lessons\" component={Lessons} />\n              <Route path=\"/about\" component={About} />\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          </Fragment>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}